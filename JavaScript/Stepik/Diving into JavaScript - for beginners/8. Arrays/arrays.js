// Перед вами массив fruits, в котором перечислены фрукты.
// Вам нужно удалить первые два фрукта из массива и добавить на их место "Апельсин" и "Банан" с помощью методов массива. Выведите окончательный массив.

let fruits = ["Яблоко", "Груша", "Вишня", "Абрикос"];
fruits.shift();
fruits.shift();
fruits.unshift("Апельсин", "Банан");

console.log(fruits);

// Создайте массив users, запросите у пользователя ввод двух имен и добавьте их в массив. Затем выведите обновленный массив

let users = [],
  fName = prompt(),
  sName = prompt();
users.unshift(fName, sName);

console.log(users);

// Создайте массив users, запросите у пользователя ввод трех имен и добавьте их в массив. Затем выведите 1-й и 3-й элемент массива в заявленном формате.

users = [prompt(), prompt(), prompt()];

console.log(`${users[0]} и ${users[2]}`);

// Перед вами программа, которая сначала запрашивает количество элементов массива, а затем элементы массива по одному соответствующее количество раз.
// Программа добавляет каждый элемент, введенный пользователем, в начало массива и выводит получившийся массив. Заполните тело цикла так, чтобы программа работала.

const numElements = Number(prompt("Введите количество элементов в массиве:"));
const userArray = [];

for (let i = 0; i < numElements; i++) {
  userArray.unshift(prompt());
}

console.log(userArray);

// Перед вами программа, которая сначала запрашивает количество элементов массива, а затем элементы массива по одному соответствующее количество раз.
// Программа добавляет каждый элемент, введенный пользователем, в конец массива.
// Далее, с помощью цикла for...of в массив lengths поочерёдно добавляются длина каждого элемента массива userArray. Заполните тела циклов так, чтобы программа работала.

const numElements = Number(prompt("Введите количество элементов в массиве:"));
const userArray = [];
const lengths = [];

for (let i = 0; i < numElements; i++) {
  userArray.push(prompt());
}

for (const word of userArray) {
  lengths.push(word.length);
}

console.log(lengths);

// Объедините данные три массива в один массив и выведите его.

const daysOfWeek = [
  "Понедельник",
  "Вторник",
  "Среда",
  "Четверг",
  "Пятница",
  "Суббота",
  "Воскресенье",
];
const users = [
  { id: 1, name: "Иван", age: 30 },
  { id: 2, name: "Мария", age: 25 },
  { id: 3, name: "Алексей", age: 35 },
  { id: 4, name: "Елена", age: 28 },
];
const months = [
  "Январь",
  "Февраль",
  "Март",
  "Апрель",
  "Май",
  "Июнь",
  "Июль",
  "Август",
  "Сентябрь",
  "Октябрь",
  "Ноябрь",
  "Декабрь",
];

console.log(daysOfWeek.concat(users, months));

// Запросите у пользователя произвольные строковые значения через запятую с пробелом и поместите их в массив. Выведите получившийся массив.

console.log(prompt().split(", "));

// Запросите у пользователя произвольные значения через запятую с пробелом. Поместите их в массив и переведите в числовой тип данных. Выведите массив.

(arr = prompt().split(", ")), (result = []);

for (a of arr) {
  if (isNaN(a)) {
    result.push(a);
  } else {
    result.push(Number(a));
  }
}

console.log(result);

// 1. Запросите у пользователя произвольные значения через запятую с пробелом и поместите их в массив
// 2. Далее, запросите у пользователя начальный и конечный индексы (включительно) поочерёдно для среза массива.
// 3. Используя метод slice, создайте новый массив, содержащий элементы, указанные пользователем, и выведите элементы массива через запятую с пробелом.

let arr = prompt().split(", ");
let result = arr.slice(+prompt(), +prompt() + 1);

console.log(result.join(", "));

// 1. Запросите у пользователя произвольные значения через запятую с пробелом и поместите их в массив.
// 2. Далее, запросите у пользователя индексы элементов, которые они хотят вывести и в каком порядке через запятую.
// 3. Выведите поочерёдно на новой строке запрошенные элементы массива.

let arr = prompt().split(", "),
  tmp = prompt().split(", ");

for (let i = 0; i < tmp.length; i++) {
  console.log(arr[tmp[i]]);
}

// 1. Запросите у пользователя произвольные значения через запятую с пробелом и поместите их в массив.
// 2. Далее, запросите у пользователя индексы элементов, которые они хотят вывести и в каком порядке через запятую.
// 3. Выведите через пробел запрошенные элементы массива.

let arr = prompt().split(", "),
  tmp = prompt().split(", "),
  result = [];

for (let i = 0; i < tmp.length; i++) {
  result.push(arr[tmp[i]]);
}

console.log(result.join(" "));

// Перед вами массив с названиями столиц некоторых стран. Используя метод filter,
// создайте новый массив, который будет содержать только те столицы, которые начинаются с буквы "А". Выведите массив

const capitals = [
  "Токио",
  "Афины",
  "Нью-Дели",
  "Сеул",
  "Джакарта",
  "Багдад",
  "Астана",
  "Москва",
  "Анкара",
];

console.log(
  capitals.filter((city) => {
    return city.startsWith("А");
  })
);

// Запросите у пользователя ввод названий столиц через пробел и поместите их в массив.
// Если массив содержит элемент "Андорра-Ла-Велла", выведите массив со столицами, которые заканчиваются на букву "а".
// Если не содержит - выведите массив со столицами, которые заканчиваются на букву "н".

let arrCity = prompt().split(" ");

console.log(
  arrCity.includes("Андорра-Ла-Велла")
    ? arrCity.filter((s) => s.endsWith("а"))
    : arrCity.filter((s) => s.endsWith("н"))
);

// Запросите у пользователя строковые значения через пробел и поместите их в массив.
// Используя метод map, создайте новый массив, который будет содержать эти значения, написанные заглавными буквами.

console.log(
  prompt()
    .split(" ")
    .map((elem) => elem.toUpperCase())
);

// Запросите у пользователя ввод имен через запятую с пробелом.
// Создайте массив из этих имен и используя метод map, создайте новый массив, в котором каждое имя будет иметь префикс "Пока, " добавленный перед именем.
// Затем выведите получившийся массив.

console.log(
  prompt()
    .split(", ")
    .map((elem) => `Пока, ${elem}`)
);

// Перед вами массив cities, содержащий названия городов.
// Напишите программу, которая запрашивает у пользователя название города и проверяет, есть ли такой город в массиве cities.
// Если город найден, программа должна вывести список городов, начинающихся с той же буквы, что и введенный пользователем город в заявленном формате.
// Если город не найден, программа должна вывести сообщение о том, что такого города нет в списке.

const cities = [
  "Москва",
  "Санкт-Петербург",
  "Саратов",
  "Магадан",
  "Ярославль",
  "Самара",
  "Якутск",
];
let userCity = prompt();

console.log(
  cities.includes(userCity)
    ? `Города, начинающиеся с буквы "${userCity[0]}": ${cities
        .filter((elem) => elem.startsWith(userCity[0]))
        .join(", ")}`
    : "Такого города нет в списке"
);

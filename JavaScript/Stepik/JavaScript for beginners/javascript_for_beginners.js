// В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" значение суммы переменных "a" и "b"
// Обратите внимание: вам нигде в этом курсе не нужно использовать console.log или document.write, всегда нужно только вернуть из функции результат с помощью return

function testSum(a, b) {
    var x;
    x=a+b;
    return x;
}

// В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" удвоенное значение остатка от деления произведения переменных "a" и "b" на их сумму

function testOperation(a, b) {
    var x;
    x =  (a*b) % (a+b) * 2
    return x;
}

// В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" значение суммы переменных "a" и "b" в случае если  a > b или их произведение в остальных случаях

function testIf(a, b) {
    var x;
    x = (a > b) ? a + b : a * b
    return x;
}

// В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" значение суммы переменных "a" и "b" - в случае если  a < b, разность "a" и "b" - в случае если  a > b, и их произведение  в остальных случаях

function testIf(a, b) {
    var x;
    x = (a < b) ? a + b : (a > b) ? a - b : a *b 
    return x;
}

// В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" название цифры, переданной в переменную "а". Цифра в переменную "а" будет передана случайным образом и может оказаться в диапазоне от 0 до 9 включительно, название должно быть написано по-русски с большой буквы - "Ноль", "Один", "Два" и т.д

function testCase(a) {
    var x;
    switch (a) {
case 0:
        x = "Ноль";
        break;
case 1:
        x = "Один";
        break;
case 2:
        x = "Два";
        break;
case 3:
        x = "Три";
        break;
case 4:
        x = "Четыре";
        break;
case 5:
        x = "Пять";
        break;
case 6:
        x = "Шесть";
        break;
case 7:
        x = "Семь";
        break;
case 8:
        x = "Восемь";
        break;
        case 9:
        x = "Девять";
        break;
    }
    return x;
}

// В этом задании вам нужно вычислить факториал для числа, передаваемого в нашу функцию и вывести его с помощью команды return. На всякий случай напоминаем, что факториал числа a это произведение всех целых чисел от 1 до a, например, если а = 5, то факториал a будет равен 1 * 2 * 3 * 4 * 5

function testFactorial(a) {
    var x=1;
    for (let i = 1; i <= a; i++)
    x=x*i
    return x;
}

// В этом задании вам нужно вычислить сумму всех четных чисел, встречающихся в ряду от 1 до числа (включительно), передаваемого в нашу функцию (переменная "а")

function testWhile(a) {
    var x=0;
    var y=1;
    while (y <= a) {
        if (y % 2 === 0) {
        x=x+y}
        y++
    }
    return x;
}

// Дано натуральное число n. Напишите рекурсивную функцию, которая возвращает строку чисел от 1 до n, разделенных пробелом

function my_function(n) {
    if (n <= 1) return n;
    return my_function(n-1) + " " + n;
}

// В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть из функции их суммарную длину

function testStr(a, b) {
    return(a.length + b.length)
}

// В этом задании в нашу функцию testStr первым параметром передается строка (переменная str), а вторым - число (переменная n) . Вам нужно вернуть из функции символ строки , порядковый номер которого указан в переданном в функцию числе

function testStr(str, n) {
return str[n-1]
}

// В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть из функции строку, которая будет включать в себя обе этих строки, преобразовав в первой строке все буквы в заглавные, а во второй - в строчные

function testStr(a, b) {
    return a.toUpperCase() + b.toLowerCase()
}

// В этом задании в нашу функцию testStr передаются две строки. Вам нужно вернуть индекс позиции, с которой начинается вхождение второй строки в первую

function testStr(a, b) {
    return a.indexOf(b)
}

// В этом задании в нашу функцию testArray передаются два массива случайной длины заполненные случайными числами. Вам нужно сосчитать сумму всех элементов обоих массивов и возвратить ее из функции

function testArray(a, b) {
    let sum = 0
    for(x of a) sum = sum + x
    for(x of b) sum = sum + x
    return sum
}

// В этом задании в нашу функцию testArray передаются две строки случайной длины и содержания. Вам нужно составить из символов этих строк один массив (каждый символ строки становится отдельным элементом массива), затем добавить первым элементом  массива текстовое значение "Иванов", и вернуть из функции все элементы в обратном порядке, преобразовав в строку. Обратите внимание, что в обратном порядке нужно переставить элементы внутри массива, а данные внутри элементов инвертировать не нужно!

function testArray(a, b) {
    let arr = (a + b).split("")
    arr.unshift("Иванов")
    return arr.reverse().join("")
}

// В этом задании в нашу функцию testDateTime передаются две строки вида "03 November 2017 04:17".
// Вам нужно превратить строки в даты, сравнить их. Для той, что больше получить день недели и вернуть его из функции.
// Название дня недели должно быть по-русски, с большой буквы, например: "Понедельник"

function testDateTime(a, b) {
    var daysArr = ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"]
    var date1 = new Date(a)
    var date2 = new Date(b)
    if (date1 > date2){
        return(daysArr[date1.getDay()])   
    }else{
        return(daysArr[date2.getDay()])   
    }
}

// В этом задании в нашу функцию передается угол в градусах. Вам нужно вернуть из функции значение его синуса. Не забывайте, что тригонометрические функции в JavaScript принимают аргументы только в радианах!

function testMath(a) {
    return Math.sin(a * Math.PI / 180)
}

// А тут вам нужно вычислить и вернуть из функции площадь треугольника. Передаваемые в функцию аргументы "a" и "b" - это длины сторон, а "c" - это угол между ними в градусах

function testMath(a, b, c) {
    var s = 0
    return s = 0.5 * a * b * Math.sin(c * Math.PI / 180)
}

// В этом задании в нашу функцию передаются 4 числа. Вам необходимо вычислить результат деления большего из этих чисел на меньшее, и округлив до ближайшего меньшего целого вернуть из функции

function testMath(a, b, c, d) {
   return Math.floor(Math.max(a, b, c, d) / Math.min(a, b, c, d))
}

// В этом задании вам необходимо выполнить возведение переменной a в степень b и возврат значения из функции

function testMath(a, b) {
    return Math.pow(a,b)
}

// В этом задании в нашу функцию передаются два параметра: целочисленная переменная ("а") и некоторая функция ("func"). Вам необходимо запустить функцию "func", с переменной "а" в качестве аргумента. Но вот проблема - в функции, похоже, оказалась ошибка. Вам нужно возвратить имя (свойство "name") возникающей ошибки

function testErrorFunc(a, func) {         
try {
    func(a)
    }
    
catch (ex){
          return (ex.name);}
}

// В этом задании в нашу функцию testRegExp первым параметром передается случайная строка(переменная s), а вторым - случайная подстрока(переменная sub_s), которую нужно использовать в качестве шаблона регулярного выражения. Вам нужно вернуть из функции строку, в которой будут перечислены через запятую все совпадения шаблона с первой строкой

function testRegExp(s, sub_s) {
var myPattern = new RegExp(sub_s,'g')
x = s.match(myPattern);
return x.join();
}
